# https://docs.docker.com/reference/compose-file/networks/
networks:
  cloudbeaver:
# https://docs.docker.com/reference/compose-file/networks/
services:
  api:
    # https://docs.docker.com/reference/compose-file/build/
    build:
      args:
        - API_DEBUGGER_HOST=${API_DEBUGGER_HOST:?error}
        - API_DEBUGGER_PORT=${API_DEBUGGER_PORT:?error}
      # https://docs.docker.com/reference/compose-file/build/#target
      target: devcontainer
    depends_on:
      postgres:
        condition: service_healthy
        required: true
    # https://docs.docker.com/compose/environment-variables/
    # https://docs.docker.com/reference/compose-file/services/#environment
    environment:
      - API_DEBUGGER_HOST=${API_DEBUGGER_HOST:?error}
      - API_DEBUGGER_PORT=${API_DEBUGGER_PORT:?error}
    # https://docs.docker.com/reference/dockerfile/#healthcheck
    # https://docs.docker.com/reference/compose-file/services/#healthcheck
    healthcheck:
      disable: true
    # https://docs.docker.com/reference/compose-file/services/#ports
    ports:
      - host_ip: ${API_MAPPED_HOST_IP:?error}
        name: api
        published: ${API_MAPPED_PORT:?error}
        target: ${API_PORT}
      - host_ip: ${API_DEBUGGER_MAPPED_HOST_IP:?error}
        name: api_debugger
        published: ${API_DEBUGGER_MAPPED_PORT:?error}
        target: ${API_DEBUGGER_PORT}
    # https://docs.docker.com/reference/compose-file/services/#restart
    restart: unless-stopped
    # https://docs.docker.com/reference/compose-file/services/#volumes
    volumes:
      # - source: api_pnpm_store
      #   target: /home/talawa/api/.pnpm-store
      #   type: volume
      # - target: /home/talawa/api/node_modules
      #   type: volume
      - bind:
          # changes made within the container are reflected on the host and changes made on the host are reflected within the container
          propagation: shared
        consistency: cached
        source: ./
        target: /home/talawa/api
        type: bind
  caddy:
    # https://docs.docker.com/reference/compose-file/services/#depends_on
    depends_on:
      api:
        condition: service_healthy
        required: false
  cloudbeaver:
    # https://docs.docker.com/reference/compose-file/services/#depends_on
    depends_on:
      postgres:
        condition: service_healthy
        # Should be set to false when a third party postgres service could be used in the api service and the postgres compose profile is disabled.
        required: false
    # https://docs.docker.com/compose/environment-variables/
    # https://docs.docker.com/reference/compose-file/services/#environment
    environment:
      - CB_ADMIN_NAME=${CLOUDBEAVER_ADMIN_NAME:?error}
      - CB_ADMIN_PASSWORD=${CLOUDBEAVER_ADMIN_PASSWORD:?error}
      - CB_SERVER_NAME=${CLOUDBEAVER_SERVER_NAME:?error}
      - CB_SERVER_URL=${CLOUDBEAVER_SERVER_URL:?error}
    # https://docs.docker.com/reference/dockerfile/#healthcheck
    # https://docs.docker.com/reference/compose-file/services/#healthcheck
    healthcheck:
      interval: 10s
      retries: 3
      start_interval: 1s
      start_period: 5s
      test: ["CMD-SHELL", "curl -f -s http://127.0.0.1:8978"]
      timeout: 10s
    # https://dbeaver.com/docs/cloudbeaver/Run-Docker-Container/
    # https://hub.docker.com/r/dbeaver/cloudbeaver
    image: dbeaver/cloudbeaver:24.2.0
    # https://docs.docker.com/reference/compose-file/services/#networks
    networks:
      - postgres
      - postgres_test
    # https://docs.docker.com/reference/compose-file/services/#ports
    ports:
      - host_ip: ${CLOUDBEAVER_MAPPED_HOST_IP:?error}
        name: cloudbeaver
        published: ${CLOUDBEAVER_MAPPED_PORT:?error}
        target: 8978
    # https://docs.docker.com/reference/compose-file/services/#profiles
    profiles:
      - cloudbeaver
    # https://docs.docker.com/reference/compose-file/services/#restart
    restart: unless-stopped
    # https://docs.docker.com/reference/compose-file/services/#volumes
    volumes:
      - source: cloudbeaver_data
        target: /opt/cloudbeaver/workspace
        type: volume
  postgres:
    # https://docs.docker.com/reference/compose-file/services/#ports
    ports:
      - host_ip: ${POSTGRES_MAPPED_HOST_IP:?error}
        name: postgres
        published: ${POSTGRES_MAPPED_PORT:?error}
        target: 5432
  postgres_test:
    ports:
      - host_ip: ${POSTGRES_TEST_MAPPED_HOST_IP:?error}
        name: postgres
        published: ${POSTGRES_TEST_MAPPED_PORT:?error}
        target: 5432
# https://docs.docker.com/reference/compose-file/volumes/
volumes:
  cloudbeaver_data:
