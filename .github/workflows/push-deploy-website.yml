##############################################################################
##############################################################################
#
# NOTE!
#
# Please read the README.md file in this directory that defines what should 
# be placed in this file
#
##############################################################################
##############################################################################

name: PUSH Workflow - Website Deployment

on:
  push:
    branches:
      - 'develop-postgres'
      
env:
  CODECOV_UNIQUE_NAME: CODECOV_UNIQUE_NAME-${{ github.run_id }}-${{ github.run_number }}
  
jobs:
  Deploy-Docusaurus:
    name: Deploy https://docs-api.talawa.io website
    runs-on: ubuntu-latest
    # Run only if the develop-postgres branch and not dependabot
    if: ${{ github.actor != 'dependabot[bot]' }}
    environment:
      # This "name" has to be the repos' branch that contains 
      # the current active website. There must be an entry for
      # the same branch in the PalisadoesFoundation's
      # "Code and automation > Environments > github-pages"
      # menu. The branch "name" must match the branch in the 
      # "on.push.branches" section at the top of this file
      name: develop-postgres
      url: https://docs-api.talawa.io
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          cache-dependency-path: 'docs/'
      - uses: actions/cache@v3
        with:
          path: docs/.docusaurus
          key: docusaurus-${{ hashFiles('docs/**') }}
          restore-keys: |
            docusaurus-
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_GITHUB_PAGES }}
      - name: Deploy to GitHub Pages
        env:
          USE_SSH: true
          GIT_USER: git
        working-directory: ./docs
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "gh-actions"
          if ! pnpm install --frozen-lockfile; then
            echo "Failed to install dependencies"
            exit 1
          fi
          if ! pnpm deploy; then
            echo "Deployment failed"
            exit 1
          fi
