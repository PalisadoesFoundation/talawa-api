##############################################################################
##############################################################################
#
# NOTE!
#
# Please read the README.md file in this directory that defines what should
# be placed in this file
#
##############################################################################
##############################################################################

name: Push Workflow

on:
  push:
    branches:
      - '**'
      
env:
    CODECOV_UNIQUE_NAME: CODECOV_UNIQUE_NAME-${{ github.run_id }}-${{ github.run_number }}

jobs:
  ##############################################################################
  # This section is added so that the most recent and valid level of
  # code coverage (post PR merge) is reported
  ##############################################################################

  Push-Workflow:
    name: Testing Application and Updating Documentation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    services:
      mongo:
        image: mongo:4.4
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 27017:27017
    env:
      MONGO_DB_URL: mongodb://localhost:27017/talawa-test-db
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}

    steps:
      - name: Checkout Talawa API Repository
        uses: actions/checkout@v3
        with:
          path: repo-api

      - name: CD
        run: cd repo-api

      - name: Generate Access Token Secret
        run: echo "ACCESS_TOKEN_SECRET=$(openssl rand -hex 32)" >> $GITHUB_ENV
        
      - name: Generate Refresh Token Secret
        run: echo "REFRESH_TOKEN_SECRET=$(openssl rand -hex 32)" >> $GITHUB_ENV

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm ci

      - name: Start the development server in detach mode
        run: |
          npm run dev &
          echo "Development server started..."

      - name: Sleep for 10s
        uses: juliangruber/sleep-action@v1
        with:
          time: 10s

      - name: Generate the GraphQL-Markdown documentation
        run: npm run generate:graphql-markdown
      
      - name: Genrate the GraphQL Schema in JSON form
        run: npm run generate:graphql-schema


      # Running the generate::** scripts will create the necessary documentation on the server 
      # where the GitHub Action is running locally. We add the same to stage with -f flag as they are a 
      # part of the .gitignore file
      - name: Add the generated docs to stage
        run: git add docs/Schema.md docs/schema.json -f

      # We use this action to commit the changes above to the repository
      - name: Commit generated docs to the repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Generate GraphQL Schema and Markdown Documentation

    - name: CD
      run: cd ..

    - name: Checkout Repository B
      uses: actions/checkout@v3
      with:
        repository: eshaanagg/talawa-docs
        path: repo-docs
      
      name: Sync File
      run: |
        cp repo-api/docs/schema.json repo-docs/docs/
        cd repo-docs
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add docs/schema.json
        git commit -m "Sync schema.json from Talawa API"
        git push origin docs

      # Testing the application
      - name: Run the tests
        run: cd ../repo-api && npm run test
    
      # Upload Coverage
      - name: Present and upload coverage to Codecov as ${{env.CODECOV_UNIQUE_NAME}}
        uses: codecov/codecov-action@v3
        with:
          verbose: true
          fail_ci_if_error: false
          name: '${{env.CODECOV_UNIQUE_NAME}}'  