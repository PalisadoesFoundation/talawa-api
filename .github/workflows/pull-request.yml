##############################################################################
##############################################################################
#
# NOTE!
#
# Please read the README.md file in this directory that defines what should
# be placed in this file
#
##############################################################################
##############################################################################

name: PR Workflow
on:
  pull_request:
    branches:
      - '**'
jobs:
  Linter:
    name: Lints the code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: yarn
      - name: Run ESLint and Prettier
        run: yarn lint

  Count-lines-of-code:
    name: Total number of lines in every file should not be more than 400
    runs-on: ubuntu-latest
    needs: Linter
    steps:
      - uses: actions/checkout@v2
      - run: chmod +x ./.github/workflows/countline.py
      - run: |
          ./.github/workflows/countline.py --exclude_directories tests

  Code-Formatter:
    name: Formats the code
    runs-on: ubuntu-latest
    needs: Linter
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # This is important to fetch the changes to the previous commit
        fetch-depth: 0
    - name: Prettify code
      uses: creyD/prettier_action@v3.3
      with:
        same_commit: True
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  JSDocs:
    name : "JSDocs comments and pipeline"
    runs-on : ubuntu-latest
    needs: Code-Formatter
    steps:
      - uses: actions/checkout@v2
      - name : "Check whether comments exists for JSDocs"
        run: |
          chmod +x ./.github/workflows/check-jsdocs-comment.py
          ./.github/workflows/check-jsdocs-comment.py

      - name : "Run JSDocs"   
        if: env.RUN_JSDOCS == 'True'
        run: echo "Run JSdocs :${{ env.RUN_JSDOCS }}"

  Code-Coverage:
    name: Testing Application
    runs-on: ubuntu-latest
    needs: Code-Formatter
    strategy:
      matrix:
        node-version: [14.x]
        mongodb-version: ['4.4']
    services:
      mongo:
        image: mongo
        options: >-
                --health-cmd mongo
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5
        ports:
          - 27017:27017
    env:
      MONGO_DB_URL: mongodb://localhost:27017/talawa-test-db
      ACCESS_TOKEN_SECRET: eeb2137b1961a3da9e3736ea4a9ed1e77cb33a4fad8a153d364c2f04ec50eab7
      REFRESH_TOKEN_SECRET: 96d41e144e63475f7f753735b50305cd2857cc41c2f2570babdb948c10b77bc5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2

    - name: Install dependencies
      run: npm install

    - name: Start the Application
      run: npm run start-test-server-in-action

    - name: Sleep for 10s
      uses: juliangruber/sleep-action@v1
      with:
        time: 10s

    - name: Run the tests
      run: npm run test

    - name: Present current coverage in PR
      uses: codecov/codecov-action@v2.1.0
      with:
        verbose: true
    - name: Stop the Application
      run: npm run stop-test-server-in-action

    - name: Test acceptable level of code coverage
      uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
      with:
        path: "./coverage/lcov.info"
        min_coverage: 29.6
